{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Davron/codes/taskt_xalq/n/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport EmptyBoard from './components/EmptyBoard';\nimport boardsSlice from \"./redux/boardsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isBoardModalOpen, setIsBoardModalOpen] = useState(false);\n  const dispatch = useDispatch();\n  const boards = useSelector(state => state.boards);\n  const activeBoard = boards.find(board => board.isActive);\n  if (!activeBoard && boards.length > 0) dispatch(boardsSlice.actions.setBoardActive({\n    index: 0\n  }));\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    gett;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" overflow-hidden  overflow-x-scroll\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: boards.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          setIsBoardModalOpen: setIsBoardModalOpen,\n          isBoardModalOpen: isBoardModalOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Home, {\n          setIsBoardModalOpen: setIsBoardModalOpen,\n          isBoardModalOpen: isBoardModalOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(EmptyBoard, {\n          type: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ctO3qMiAd1dTFq8po+bJZ1nujgM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","Header","Home","EmptyBoard","boardsSlice","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isBoardModalOpen","setIsBoardModalOpen","dispatch","boards","state","activeBoard","find","board","isActive","length","actions","setBoardActive","index","tasks","setTasks","gett","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/admin/Davron/codes/taskt_xalq/n/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport EmptyBoard from './components/EmptyBoard';\nimport boardsSlice from \"./redux/boardsSlice\";\n\nfunction App() {\n  const [isBoardModalOpen, setIsBoardModalOpen] = useState(false);\n  const dispatch = useDispatch();\n  const boards = useSelector((state) => state.boards);\n  const activeBoard = boards.find((board) => board.isActive);\n  if (!activeBoard && boards.length > 0)\n    dispatch(boardsSlice.actions.setBoardActive({ index: 0 }));\n  \n  \n  const [tasks, setTasks] = useState([])\n  \n\n  useEffect(() => {\n    gett \n  })\n  return (\n    <div className=\" overflow-hidden  overflow-x-scroll\">\n      <>\n        {boards.length > 0 ?\n        <>\n        <Header\n          setIsBoardModalOpen={setIsBoardModalOpen}\n          isBoardModalOpen={isBoardModalOpen}\n        />\n        <Home\n          setIsBoardModalOpen={setIsBoardModalOpen}\n          isBoardModalOpen={isBoardModalOpen}\n        />\n        </>\n        :\n        <>\n          <EmptyBoard type='add'/>\n        </>\n      }\n        \n      </>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,WAAW,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAMe,QAAQ,GAAGd,WAAW,EAAE;EAC9B,MAAMe,MAAM,GAAGd,WAAW,CAAEe,KAAK,IAAKA,KAAK,CAACD,MAAM,CAAC;EACnD,MAAME,WAAW,GAAGF,MAAM,CAACG,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAAC;EAC1D,IAAI,CAACH,WAAW,IAAIF,MAAM,CAACM,MAAM,GAAG,CAAC,EACnCP,QAAQ,CAACT,WAAW,CAACiB,OAAO,CAACC,cAAc,CAAC;IAAEC,KAAK,EAAE;EAAE,CAAC,CAAC,CAAC;EAG5D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAGtCD,SAAS,CAAC,MAAM;IACd6B,IAAI;EACN,CAAC,CAAC;EACF,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,qCAAqC;IAAAC,QAAA,eAClDtB,OAAA,CAAAE,SAAA;MAAAoB,QAAA,EACGd,MAAM,CAACM,MAAM,GAAG,CAAC,gBAClBd,OAAA,CAAAE,SAAA;QAAAoB,QAAA,gBACAtB,OAAA,CAACL,MAAM;UACLW,mBAAmB,EAAEA,mBAAoB;UACzCD,gBAAgB,EAAEA;QAAiB;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACnC,eACF1B,OAAA,CAACJ,IAAI;UACHU,mBAAmB,EAAEA,mBAAoB;UACzCD,gBAAgB,EAAEA;QAAiB;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACnC;MAAA,gBACC,gBAEH1B,OAAA,CAAAE,SAAA;QAAAoB,QAAA,eACEtB,OAAA,CAACH,UAAU;UAAC8B,IAAI,EAAC;QAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAE;IACvB;EAGF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEV;AAACtB,EAAA,CAtCQD,GAAG;EAAA,QAEOV,WAAW,EACbC,WAAW;AAAA;AAAAkC,EAAA,GAHnBzB,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}